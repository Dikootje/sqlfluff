# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 19afffb232943ddb64ababcfd891921f6eb3f9169ced37d4745613071a0528a8
file:
- statement:
    create_view_statement:
    - keyword: create
    - keyword: view
    - table_reference:
        identifier: myview1
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            column_reference:
              identifier: foo
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: bar
- statement_terminator: ;
- statement:
    create_statement:
    - keyword: create
    - keyword: view
    - object_reference:
        identifier: myview2
    - snowflake_comment:
        keyword: comment
        comparison_operator: '='
        literal: "'just a comment'"
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            column_reference:
              identifier: foo
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: bar
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: create
    - keyword: view
    - table_reference:
        identifier: myview3
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: foo
        end_bracket: )
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            column_reference:
              identifier: foo
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: bar
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: create
    - keyword: view
    - table_reference:
        identifier: myview4
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: foo
      - comma: ','
      - column_reference:
          identifier: baz
      - end_bracket: )
    - keyword: as
    - select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              identifier: foo
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: baz
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: bar
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: create
    - keyword: view
    - table_reference:
        identifier: myview5
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: foo
      - unparsable:
        - raw: comment
        - raw: "'comment'"
      - comma: ','
      - column_reference:
          identifier: baz
      - unparsable:
        - raw: comment
        - raw: "'comment'"
      - end_bracket: )
    - keyword: as
    - select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              identifier: foo
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: baz
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: bar
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: create
    - binary_operator: or
    - keyword: replace
    - keyword: view
    - table_reference:
        identifier: myview6
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            column_reference:
              identifier: foo
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: bar
- statement_terminator: ;
- statement:
    unparsable:
    - raw: create
    - raw: if
    - raw: not
    - raw: exists
    - raw: view
    - raw: myview7
    - raw: as
    - raw: select
    - raw: foo
    - raw: from
    - raw: bar
- statement_terminator: ;
